syntax = "proto3";

package platform_subscriber;

option go_package = "Streamfony/platform-subscriber-sdk/subscriber";

service PlatformSubscriber {
    rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse) {} // Heartbeat request, that allows to recieve new tasks for subscription
    rpc MarkDisconnected(MarkDisconnectedRequest) returns (MarkDisconnectedResponse) {} // Mark disconnected request, that allows to mark a connection as disconnected
}

// region Requests
message HeartbeatRequest {
    PlatformInfo platform_info = 1;
    int64 amount_of_connections = 2;
}

message MarkDisconnectedRequest {
    PlatformInfo platform_info = 1;
    Target target = 2;
    int64 amount_of_connections = 3;
}
// endregion

// region Responses
message HeartbeatResponse {
    bool is_ok = 1;
    repeated Task tasks = 2;
}

message MarkDisconnectedResponse {
    bool is_ok = 1;
}
// endregion

// region Enums
enum TaskAction {
    SUBSCRIBE = 0;
    UNSUBSCRIBE = 1;
}
// endregion

// region Parts
message PlatformInfo {
    string platform = 1;
    string type = 2;
    string instance_id = 3;
}
message Task {
    TaskAction action = 1;
    Target target = 2;
}
message Target {
    uint64 user_id = 1;
    optional string additional_info = 2;
}
// endregion
